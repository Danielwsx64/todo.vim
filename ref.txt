treesitter queries highlights

https://github.com/neovim/neovim/pull/14252
https://github.com/neovim/neovim/pull/20105
https://github.com/nvim-treesitter/nvim-treesitter/issues/839

vim.treesitter.query.set_query('markdown', 'highlights', '(section (atx_heading heading_content: (inline) @function (#eq? @function  " Item do todo")))')
vim.treesitter.query.set_query('markdown_inline', 'highlights', '(shortcut_link (link_text) @function (#eq? @function "done"))')
print(vim.inspect(vim.treesitter.get_query_files('markdown', 'highlights', nil)))
print(vim.inspect(vim.treesitter.get_query('markdown', 'highlights')))
print(vim.inspect(vim.treesitter.get_query('todomd', 'highlights')))

print(vim.inspect(vim.treesitter.get_parser(5, "markdown")))
print(vim.inspect(vim.treesitter.get_parser(5, "todo")))

print(vim.inspect(vim.treesitter.get_query_files('todomd', 'highlights', nil)))


lua print(vim.inspect(vim.api.nvim_get_hl_by_name("Special", true)))

Special        xxx ctermfg=224 guifg=Orange
                   links to ThemerAccent

:parse()[1]:root()
colocar a pasta queries dentro de /home/daniel/workspace/nvim funciona


local parser_config = require "nvim-treesitter.parsers".get_parser_configs()
parser_config.todomd = {
  install_info = {
    url = "https://github.com/MDeiml/tree-sitter-markdown",
    location = "tree-sitter-markdown",
    files = { "src/parser.c", "src/scanner.cc" },
    branch = "split_parser",
  },
  filetype = "todomd",
  experimental = true,
}

	-- local parser_config = require("nvim-treesitter.parsers").get_parser_configs()
	--
	-- parser_config.todomd = {
	-- 	install_info = {
	-- 		url = "https://github.com/Danielwsx64/todo.vim",
	-- 		location = "tree-sitter-todomd",
	-- 		files = { "src/parser.c", "src/scanner.cc" },
	-- 		branch = "main",
	-- 	},
	-- 	experimental = true,
	-- }

	-- set_query("todomd", "injections", "")

local ft_to_parser = require"nvim-treesitter.parsers".filetype_to_parsername
ft_to_parser.someft = "python" -- the someft filetype will use the python parser and queries.

	local group = vim.api.nvim_create_augroup("TODOFileType", { clear = true })

	vim.api.nvim_create_autocmd({ "BufNewFile", "BufRead" }, {
		group = group,
		pattern = { "*.todomd" },
		callback = function()
			vim.api.nvim_buf_set_option(0, "filetype", "todomd")
			vim.treesitter.start()
		end,
	})

{ {
    bufnr = 5,
    content = "",
    range = { 2, 0, 3, 0 },
    status = "done",
    title = "Item do todo"
  }, {
    bufnr = 5,
    content = "",
    range = { 3, 0, 4, 0 },
    status = "doing",
    title = "Item do todo"
  }, {
    bufnr = 5,
    content = "Aqui dentro\n- Eu posso fazer o que eu achar melhor mano\n\n### mas eu to dentro?\n\n#### Eu nao tenho certeza\n\n\n\n\n\n##se tem outra coisa aqui ferrou\n",
    range = { 4, 0, 18, 0 },
    status = "todo",
    title = "Item do todo [:outro:]"
  }, {
    bufnr = 5,
    content = "",
    due = "2021-01-01",
    range = { 18, 0, 20, 0 },
    status = "done",
    title = "Item do todo"
  } }
